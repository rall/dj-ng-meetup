{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { tap, map, Subject, filter, share, withLatestFrom, startWith } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../fruit.service\";\nimport * as i3 from \"@angular/common\";\nexport let FruitComponent = /*#__PURE__*/(() => {\n  class FruitComponent {\n    constructor(fb, fruitService) {\n      this.fb = fb;\n      this.fruitService = fruitService;\n      this.fruitForm = this.fb.group({\n        name: ['', Validators.required],\n        fruit: ['', Validators.minLength(6)],\n        date: ['']\n      });\n      this.submitSubject = new Subject();\n      // prettier-ignore\n      this.validFruit$ = this.fruitForm.statusChanges.pipe(map(status => status === 'VALID'), filter(Boolean));\n      // prettier-ignore\n      this.fruit$ = this.fruitForm.get('fruit').valueChanges.pipe(startWith(\"pomegranate\"));\n      //prettier-ignore\n      this.fruitSubmit$ = this.submitSubject.pipe(withLatestFrom(this.fruit$, (_, fruit) => fruit), tap({\n        next: n => console.log(Date.now(), n),\n        error: e => console.error(`uh oh something went wrong`, e),\n        complete: () => console.error('combinatation completed')\n      }), share());\n    }\n    ngOnInit() {\n      this.fruitSubmit$.subscribe(this.fruitService.fruitSubject);\n    }\n  }\n  FruitComponent.ɵfac = function FruitComponent_Factory(t) {\n    return new (t || FruitComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.FruitService));\n  };\n  FruitComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: FruitComponent,\n    selectors: [[\"app-fruit\"]],\n    decls: 17,\n    vars: 4,\n    consts: [[3, \"formGroup\", \"submit\"], [\"for\", \"name\"], [\"id\", \"name\", \"type\", \"text\", \"formControlName\", \"name\"], [\"id\", \"fruit\", \"type\", \"text\", \"formControlName\", \"fruit\"], [\"id\", \"date\", \"type\", \"date\", \"formControlName\", \"date\"], [\"type\", \"submit\"]],\n    template: function FruitComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"submit\", function FruitComponent_Template_form_submit_0_listener() {\n          return ctx.submitSubject.next();\n        });\n        i0.ɵɵelementStart(1, \"label\", 1);\n        i0.ɵɵtext(2, \"name:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(3, \"input\", 2);\n        i0.ɵɵelementStart(4, \"label\", 1);\n        i0.ɵɵtext(5, \"fruit:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"input\", 3);\n        i0.ɵɵelementStart(7, \"label\", 1);\n        i0.ɵɵtext(8, \"date:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(9, \"input\", 4)(10, \"input\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"section\")(12, \"p\");\n        i0.ɵɵtext(13, \"OUTPUT:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"pre\");\n        i0.ɵɵtext(15);\n        i0.ɵɵpipe(16, \"async\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.fruitForm);\n        i0.ɵɵadvance(15);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(16, 2, ctx.fruitService.fruit$));\n      }\n    },\n    dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i3.AsyncPipe],\n    styles: [\"p[_ngcontent-%COMP%]{font-family:Lato}label[_ngcontent-%COMP%]{display:block}\"]\n  });\n  return FruitComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
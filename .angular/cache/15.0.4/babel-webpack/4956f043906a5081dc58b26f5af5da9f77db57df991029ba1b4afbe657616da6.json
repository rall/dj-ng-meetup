{"ast":null,"code":"import { catchError, of, Subject, switchMap, tap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let FruitService = /*#__PURE__*/(() => {\n  class FruitService {\n    constructor(http) {\n      this.http = http;\n      this.path = \"/api\";\n      this.fruitSubject = new Subject();\n      this.fruit$ = this.fruitSubject.pipe(switchMap(fruit => this.http.get(`${this.path}/${fruit}`).pipe(tap({\n        next: n => console.log(`next inside inner stream: ${n}`),\n        error: e => console.error(`uh oh something went wrong in substream`, e),\n        complete: () => console.error('substream completed')\n      }), catchError(e => {\n        console.error('caught error', e);\n        return of(undefined);\n      }))), tap({\n        next: n => console.log(`next in outer steam: ${n}`),\n        error: e => console.error(`uh oh something went wrong`, e),\n        complete: () => console.error('outer stream completed')\n      }));\n    }\n  }\n  FruitService.ɵfac = function FruitService_Factory(t) {\n    return new (t || FruitService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  FruitService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: FruitService,\n    factory: FruitService.ɵfac,\n    providedIn: 'root'\n  });\n  return FruitService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}